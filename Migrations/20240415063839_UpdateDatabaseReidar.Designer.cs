// <auto-generated />
using Avancerad.Net_Labb1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Avancerad.Net_Labb1.Migrations
{
    [DbContext(typeof(SkolaDbContext))]
    [Migration("20240415063839_UpdateDatabaseReidar")]
    partial class UpdateDatabaseReidar
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Avancerad.Net_Labb1.Klasser.Klass", b =>
                {
                    b.Property<int>("KlassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KlassId"));

                    b.Property<string>("KlassNamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KlassId");

                    b.ToTable("Klasser");

                    b.HasData(
                        new
                        {
                            KlassId = 1,
                            KlassNamn = "SUT23"
                        },
                        new
                        {
                            KlassId = 2,
                            KlassNamn = "SUT22"
                        });
                });

            modelBuilder.Entity("Avancerad.Net_Labb1.Klasser.Kopplingstabell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KlassId")
                        .HasColumnType("int");

                    b.Property<int>("LärarId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("ÄmneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KlassId");

                    b.HasIndex("LärarId");

                    b.HasIndex("StudentId");

                    b.HasIndex("ÄmneId");

                    b.ToTable("Kopplingstabeller");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KlassId = 1,
                            LärarId = 1,
                            StudentId = 1,
                            ÄmneId = 1
                        },
                        new
                        {
                            Id = 2,
                            KlassId = 1,
                            LärarId = 2,
                            StudentId = 2,
                            ÄmneId = 1
                        },
                        new
                        {
                            Id = 3,
                            KlassId = 1,
                            LärarId = 3,
                            StudentId = 3,
                            ÄmneId = 1
                        },
                        new
                        {
                            Id = 4,
                            KlassId = 1,
                            LärarId = 4,
                            StudentId = 4,
                            ÄmneId = 2
                        },
                        new
                        {
                            Id = 5,
                            KlassId = 1,
                            LärarId = 1,
                            StudentId = 5,
                            ÄmneId = 2
                        },
                        new
                        {
                            Id = 6,
                            KlassId = 1,
                            LärarId = 2,
                            StudentId = 6,
                            ÄmneId = 2
                        },
                        new
                        {
                            Id = 7,
                            KlassId = 2,
                            LärarId = 3,
                            StudentId = 7,
                            ÄmneId = 3
                        },
                        new
                        {
                            Id = 8,
                            KlassId = 2,
                            LärarId = 4,
                            StudentId = 8,
                            ÄmneId = 3
                        },
                        new
                        {
                            Id = 9,
                            KlassId = 2,
                            LärarId = 1,
                            StudentId = 9,
                            ÄmneId = 3
                        },
                        new
                        {
                            Id = 10,
                            KlassId = 2,
                            LärarId = 2,
                            StudentId = 10,
                            ÄmneId = 4
                        },
                        new
                        {
                            Id = 11,
                            KlassId = 2,
                            LärarId = 3,
                            StudentId = 11,
                            ÄmneId = 4
                        },
                        new
                        {
                            Id = 12,
                            KlassId = 2,
                            LärarId = 4,
                            StudentId = 12,
                            ÄmneId = 4
                        });
                });

            modelBuilder.Entity("Avancerad.Net_Labb1.Klasser.Lärare", b =>
                {
                    b.Property<int>("LärarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LärarId"));

                    b.Property<string>("LärarNamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LärarId");

                    b.ToTable("Lärare");

                    b.HasData(
                        new
                        {
                            LärarId = 1,
                            LärarNamn = "Anas"
                        },
                        new
                        {
                            LärarId = 2,
                            LärarNamn = "Tobias"
                        },
                        new
                        {
                            LärarId = 3,
                            LärarNamn = "Lennart"
                        },
                        new
                        {
                            LärarId = 4,
                            LärarNamn = "Reidar"
                        });
                });

            modelBuilder.Entity("Avancerad.Net_Labb1.Klasser.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("StudentNamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Studenter");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            StudentNamn = "Ermin"
                        },
                        new
                        {
                            StudentId = 2,
                            StudentNamn = "Oskar"
                        },
                        new
                        {
                            StudentId = 3,
                            StudentNamn = "Ludde"
                        },
                        new
                        {
                            StudentId = 4,
                            StudentNamn = "Johan"
                        },
                        new
                        {
                            StudentId = 5,
                            StudentNamn = "Aska"
                        },
                        new
                        {
                            StudentId = 6,
                            StudentNamn = "Simon"
                        },
                        new
                        {
                            StudentId = 7,
                            StudentNamn = "Ali"
                        },
                        new
                        {
                            StudentId = 8,
                            StudentNamn = "Mohamed"
                        },
                        new
                        {
                            StudentId = 9,
                            StudentNamn = "Shahram"
                        },
                        new
                        {
                            StudentId = 10,
                            StudentNamn = "Ortiz"
                        },
                        new
                        {
                            StudentId = 11,
                            StudentNamn = "Markus"
                        },
                        new
                        {
                            StudentId = 12,
                            StudentNamn = "Fredrik"
                        });
                });

            modelBuilder.Entity("Avancerad.Net_Labb1.Klasser.Ämne", b =>
                {
                    b.Property<int>("ÄmneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ÄmneId"));

                    b.Property<string>("ÄmneNamn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ÄmneId");

                    b.ToTable("Ämnen");

                    b.HasData(
                        new
                        {
                            ÄmneId = 1,
                            ÄmneNamn = "Mattematik"
                        },
                        new
                        {
                            ÄmneId = 2,
                            ÄmneNamn = "C#"
                        },
                        new
                        {
                            ÄmneId = 3,
                            ÄmneNamn = "Programmering1"
                        },
                        new
                        {
                            ÄmneId = 4,
                            ÄmneNamn = "Programmering2"
                        });
                });

            modelBuilder.Entity("Avancerad.Net_Labb1.Klasser.Kopplingstabell", b =>
                {
                    b.HasOne("Avancerad.Net_Labb1.Klasser.Klass", "Klass")
                        .WithMany()
                        .HasForeignKey("KlassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Avancerad.Net_Labb1.Klasser.Lärare", "Lärare")
                        .WithMany()
                        .HasForeignKey("LärarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Avancerad.Net_Labb1.Klasser.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Avancerad.Net_Labb1.Klasser.Ämne", "Ämne")
                        .WithMany()
                        .HasForeignKey("ÄmneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klass");

                    b.Navigation("Lärare");

                    b.Navigation("Student");

                    b.Navigation("Ämne");
                });
#pragma warning restore 612, 618
        }
    }
}
